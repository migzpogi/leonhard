trigger:
  tags:
    include:
      - v*

pool:
  vmImage: 'ubuntu-16.04'

stages:
  - stage: test
    displayName: "Run Tests"
    jobs:
      - job: unit_tests
        displayName: "Run Unit Tests"
        pool:
          vmImage: "ubuntu-16.04"
        steps:
          - task: UsePythonVersion@0
            inputs:
              versionSpec: "3.x"
            displayName: "Use Python 3.x"
          - script: pip install pytest pytest-cov
            displayName: "Install Pytest"
          - script: pytest
            displayName: "Run unit tests"
          - task: PublishTestResults@2
            displayName: "Publish unit test results"
            inputs:
              testResultsFiles: "tests.xml"
              testRunTitle: Test
          - task: PublishCodeCoverageResults@1
            displayName: "Publish code coverage"
            inputs:
              codeCoverageTool: Cobertura
              summaryFileLocation: ""
              reportDirectory: ""

  - stage: build
    displayName: "Build wheel file"
    dependsOn:
      - test
    condition: succeeded()
    jobs:
      - job: build_wheel
        displayName: "Build wheel file"
        pool:
          vmImage: "ubuntu-16.04"
        steps:
          - task: UsePythonVersion@0
            inputs:
              versionSpec: "3.x"
            displayName: "Use Python 3.x"
          - script: pip install --upgrade pip setuptools wheel
            displayName: "Install tools"
          - script: python setup.py sdist bdist_wheel
            displayName: "Build wheel file"

  - stage: publish_to_test
    displayName: "Publish to PyPi Test"
    dependsOn:
      - build
    condition: succeeded()
    jobs:
      - job: publish_test
        displayName: "Publish to PyPi Test"
        pool:
          vmImage: "ubuntu-16.04"
        steps:
          - task: UsePythonVersion@0
            inputs:
              versionSpec: "3.x"
            displayName: "Use Python 3.x"
          - script: pip install twine
            displayName: "Install Twine"
          - script: twine upload --repository testpypi dist/* -u $(TWINE_USER) -p $(TWINE_PASS)
            displayName: "Twine upload to PyPi Test"

  - stage: publish_to_prod
    displayName: "Publish to PyPi Prod"
    dependsOn:
      - publish_to_test
    condition: succeeded()
    jobs:
      - job: publish_test
        displayName: "Publish to PyPi Prod"
        pool:
          vmImage: "ubuntu-16.04"
        steps:
          - task: UsePythonVersion@0
            inputs:
              versionSpec: "3.x"
            displayName: "Use Python 3.x"
          - script: pip install twine
            displayName: "Install Twine"
#          - script: twine upload --repository testpypi dist/* -u $(TWINE_USER) -p $(TWINE_PASS)
#            displayName: "Twine upload to PyPi Test"



